<?xml version="1.0" encoding="UTF-8" ?>  
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="mybatis.dbmapper.test.insert">

	<insert id="test1" parameterType="cn.com.officedepot.model.Model" statementType="PREPARED" flushCache="true">
		<!--
			sql: INSERT INTO tablename set column=value, column=value;
			set标签会处理多余的逗号
		-->
		INSERT INTO od_foundation_db_test
		<set>
			<if test="id != null">
				id = #{id},
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(str)">
				str = #{str},
			</if>
		</set>
	</insert>

	<insert id="test2" parameterType="cn.com.officedepot.model.Model" statementType="PREPARED" flushCache="true">
		<!--
			sql: INSERT INTO tablename (column, column) values (value, value), (value, value);
			foreach迭代的集合, 如果为List那么collection设为list, 如果为Array那么collection设为array
			item为当前迭代的对象
			index从0开始计数
			separator为多个迭代对象之间的分隔符
			open为前缀, 迭代完成后加入迭代内容的开始位置
			close为后缀, 迭代完成后加入迭代内容的结束位置
		-->
		INSERT INTO od_foundation_db_test (id, str) VALUES
		<foreach collection="list" item="o" index="idx" separator=",">
			(#{o.id}, #{o.str})
		</foreach>
	</insert>

	<insert id="test3" parameterType="cn.com.officedepot.model.Model" statementType="PREPARED" flushCache="true" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		<!--
			sql: INSERT INTO tablename set column=value;
			useGeneratedKeys表示使用JDBC的getGeneratedKeys方法来取出由数据库内部生成的主键
			keyProperty对应的实体类属性，必须有getter, setter
			代码层面, 由于sqlTemplate.insert不再返回主键值, 所以必须通过实体类的get方法获取主键值
			sqlTemplate.insert之后必须提交事务, 否则也获取不到主键值
		-->
		INSERT INTO od_foundation_db_test
		<set>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(str)">
				str = #{str},
			</if>
		</set>
	</insert>

	<insert id="test4" parameterType="cn.com.officedepot.model.Model" statementType="PREPARED" flushCache="true" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
		<!--
			sql: INSERT INTO tablename (column, column) values (value, value), (value, value);
			
		-->
		INSERT INTO od_foundation_db_test (id, str) VALUES
		<foreach collection="list" item="o" index="idx" separator=",">
			(#{o.id}, #{o.str})
		</foreach>
	</insert>

	<select id="check" parameterType="cn.com.officedepot.model.Model" resultType="Integer" statementType="PREPARED" flushCache="false" resultSetType="FORWARD_ONLY">
		SELECT count(*) FROM od_foundation_db_test
		<where>
			<if test="id != null">
				and id = #{id}
			</if>
			<if test="@org.apache.commons.lang3.StringUtils@isNotBlank(str)">
				and str = #{str}
			</if>
		</where>
	</select>

</mapper>
